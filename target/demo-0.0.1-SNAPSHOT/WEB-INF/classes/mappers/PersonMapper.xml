<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.PersonDao">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Person">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="height" jdbcType="VARCHAR" property="height" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="monthly" jdbcType="VARCHAR" property="monthly" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sex, age, height, school, area, monthly, username
  </sql>
  <select id="selectPersonById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCount" 
		resultMap="BaseResultMap">
		select count(*) from person
	</select>
	  <select id="validLogin" parameterType="com.example.demo.entity.Login">
		select count(*) from login where loginname=#{loginname,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
	</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertPerson" parameterType="com.example.demo.entity.Person">
    insert into person (id,sex, age, 
      height, school, area, 
      monthly, username)
    values (#{id,jdbcType=INTEGER},  #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{height,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{monthly,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Person">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="monthly != null">
        monthly,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="monthly != null">
        #{monthly,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Person">
    update person
    <set>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="monthly != null">
        monthly = #{monthly,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Person">
    update person
    set sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      monthly = #{monthly,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>